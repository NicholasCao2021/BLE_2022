make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Tue Aug 23 11:44:10 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from 'Makefile', line 1)
MAKEFILE_DIR := /home/flying/Desktop/starling_controller
# environment
SNAP_COMMON = /var/snap/code/common
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
IM_CONFIG_PHASE = 1
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1003/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/flying/Desktop/starling_controller
# makefile
SHELL = /bin/sh
# environment
SNAP_DATA = /var/snap/code/105
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
JOURNAL_STREAM = 8:65720
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from 'Makefile', line 6)
IMAGE_NAME = nicholascao2021/starling-controller
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /var/lib/snapd/desktop/applications/code_code.desktop
# environment
USERNAME = flying
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1003/bus
# environment
_ = /snap/code/105/usr/share/code/code
# makefile (from 'Makefile', line 9)
NODE_ID = 0
# environment
MANAGERPID = 5008
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
VSCODE_CWD = /home/flying
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/105/usr/share/glib-2.0/schemas
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/flying/.local/bin:/home/flying/Documents/Murmuration/bin:/usr/share/Murmuration/bin:/home/flying/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/share/Murmuration/bin:/usr/share/Murmuration/bin
# environment
GPG_AGENT_INFO = /run/user/1003/gnupg/S.gpg-agent:0:1
# environment
SESSION_MANAGER = local/IT083388:@/tmp/.ICE-unix/5235,unix/IT083388:/tmp/.ICE-unix/5235
# environment
XDG_RUNTIME_DIR = /run/user/1003
# environment
GDK_PIXBUF_MODULE_FILE = /home/flying/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# environment
SNAP = /snap/code/105
# makefile (from 'Makefile', line 3)
BUILDX_HOST_PLATFORM := linux/amd64
# environment
SNAP_VERSION = e4503b30
# environment
XDG_MENU_PREFIX = gnome-
# environment
DISABLE_WAYLAND = 1
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
INVOCATION_ID = abedeca0183b41b4a387f03539921cb6
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/105/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = 
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1003/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 30318
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'Makefile', line 7)
NETWORK = bridge
# environment
SNAP_INSTANCE_KEY = 
# environment
PWD = /home/flying/Desktop/starling_controller
# default
.LOADED := 
# environment
SSH_AGENT_PID = 5195
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/flying
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /home/flying/.config/Code/CachedData/e4503b30fc78200f846c62cf8091b76ff5547662
# environment
LOGNAME = flying
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = v58rvnXHdOsbkEFIuhCU47iCNpggBNN0p-Bg848AT_daUSWrYJgu
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from 'Makefile', line 2)
BAKE_SCRIPT := /home/flying/Desktop/starling_controller/buildtools/docker-bake.hcl
# environment
SNAP_USER_COMMON = /home/flying/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile', line 4)
BAKE := docker buildx bake --builder default --load --set *.platform=linux/amd64 -f /home/flying/Desktop/starling_controller/buildtools/docker-bake.hcl
# environment
MAKELEVEL := 0
# environment
SNAP_REAL_HOME = /home/flying
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# environment
SNAP_USER_DATA = /home/flying/snap/code/105
# environment
SHLVL = 0
# environment
KUBECOFNIFG = /home/flying/.kube/config/k3s.yaml
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# default
MAKE_VERSION := 4.2.1
# environment
USER = flying
# environment
SNAP_REVISION = 105
# makefile
.DEFAULT_GOAL := all
# environment
XDG_CURRENT_DESKTOP = Unity
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = en_GB:en
# environment
VSCODE_IPC_HOOK = /run/user/1003/vscode-62476084-1.70.2-main.sock
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# automatic
+F = $(notdir $+)
# environment
QT_ACCESSIBILITY = 1
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# environment
SNAP_COOKIE = v58rvnXHdOsbkEFIuhCU47iCNpggBNN0p-Bg848AT_daUSWrYJgu
# automatic
<F = $(notdir $<)
# makefile (from 'Makefile', line 10)
RUN_ARGS = -v /dev/ttyACM$(NODE_ID):/dev/ttyACM$(NODE_ID) --privileged -e VEHICLE_MAVLINK_SYSID=$(NODE_ID)
# environment
SNAP_NAME = code
# environment
LC_ALL = C
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
SNAP_REEXEC = 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
GJS_DEBUG_OUTPUT = stderr
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 8)
ENV = 
# environment
LANG = C
# environment
VSCODE_PID = 30371
# variable set hash-table stats:
# Load=127/1024=12%, Rehash=0, Collisions=21/172=12%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 64769, inode 7999642): 12 files, no impossibilities.

# 12 files, no impossibilities in 1 directories.

# Implicit Rules
 

# No implicit rules.

# Files

all: build
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/4=0%

.PHONY: all build local-build-setup local-build-push run run_bash
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-08-22 11:37:04.977092556
#  File has been updated.
#  Successfully updated.

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := build
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
#  recipe to execute (from 'Makefile', line 23):
	$(BAKE) starling_controller

help:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 15):
	@echo "all - run build"
	@echo "build - build the dockerfile for this project"
	@echo "run - builds and runs the dockerfile for this project"
	@echo "run_bash - builds and runs the dockerfile putting you into a bash shell"
	@echo "local-build-push - locally builds and pushes amd64 and arm64 variants of your container"
	@echo "help - show this help screen"

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run: build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 35):
	docker run -it --rm --net=$(NETWORK) $(ENV) -e USE_SIMULATED_TIME=true $(RUN_ARGS) $(IMAGE_NAME)

runonly:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 38):
	docker run -it --rm --net=$(NETWORK) $(ENV) -e USE_SIMULATED_TIME=true $(RUN_ARGS) $(IMAGE_NAME)

run_bash: build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 41):
	docker run -it --rm --net=$(NETWORK) $(ENV) -e USE_SIMULATED_TIME=true $(RUN_ARGS) $(IMAGE_NAME) bash

local-build-push:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 32):
	docker buildx bake --builder mybuilder -f $(BAKE_SCRIPT) --push starling-controller

local-build-setup:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 26):
	docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
	docker buildx create --name mybuilder
	docker buildx use mybuilder
	docker buildx inspect --bootstrap

# files hash-table stats:
# Load=12/1024=1%, Rehash=0, Collisions=0/34=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 25 / storage = 237 B / avg = 9 B
# current buf: size = 8162 B / used = 237 B / count = 25 / avg = 9 B

# strcache performance: lookups = 49 / hit rate = 48%
# hash-table stats:
# Load=25/8192=0%, Rehash=0, Collisions=1/49=2%
# Finished Make data base on Tue Aug 23 11:44:10 2022

 
